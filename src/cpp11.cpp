// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// spresslib-r-interface.cpp
integers_matrix<> spr_encode_(size_t n, size_t k, doubles x, doubles y, doubles extent);
extern "C" SEXP _spresslib_spr_encode_(SEXP n, SEXP k, SEXP x, SEXP y, SEXP extent) {
  BEGIN_CPP11
    return cpp11::as_sexp(spr_encode_(cpp11::as_cpp<cpp11::decay_t<size_t>>(n), cpp11::as_cpp<cpp11::decay_t<size_t>>(k), cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<doubles>>(y), cpp11::as_cpp<cpp11::decay_t<doubles>>(extent)));
  END_CPP11
}
// spresslib-r-interface.cpp
doubles_matrix<> spr_decode_(size_t n, size_t k, integers h, doubles extent);
extern "C" SEXP _spresslib_spr_decode_(SEXP n, SEXP k, SEXP h, SEXP extent) {
  BEGIN_CPP11
    return cpp11::as_sexp(spr_decode_(cpp11::as_cpp<cpp11::decay_t<size_t>>(n), cpp11::as_cpp<cpp11::decay_t<size_t>>(k), cpp11::as_cpp<cpp11::decay_t<integers>>(h), cpp11::as_cpp<cpp11::decay_t<doubles>>(extent)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_spresslib_spr_decode_", (DL_FUNC) &_spresslib_spr_decode_, 4},
    {"_spresslib_spr_encode_", (DL_FUNC) &_spresslib_spr_encode_, 5},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_spresslib(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
